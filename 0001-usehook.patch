From b85c9a613b67efe209ef2ea23b9f01faabf0b8e3 Mon Sep 17 00:00:00 2001
From: nick <nick@egan.gg>
Date: Mon, 12 Dec 2022 22:03:48 -0500
Subject: [PATCH] usehook

---
 selfdrive/car/toyota/carstate.py | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/selfdrive/car/toyota/carstate.py b/selfdrive/car/toyota/carstate.py
index 3be748c4c..4aa062011 100644
--- a/selfdrive/car/toyota/carstate.py
+++ b/selfdrive/car/toyota/carstate.py
@@ -8,6 +8,11 @@ from opendbc.can.parser import CANParser
 from selfdrive.car.interfaces import CarStateBase
 from selfdrive.car.toyota.values import ToyotaFlags, DBC, STEER_THRESHOLD, NO_STOP_TIMER_CAR, TSS2_CAR, RADAR_ACC_CAR, EPS_SCALE, UNSUPPORTED_DSU_CAR
 
+try:
+  from opsetspeed.shminject import Hook
+except:
+  Hook = None
+
 
 class CarState(CarStateBase):
   def __init__(self, CP):
@@ -17,6 +22,8 @@ class CarState(CarStateBase):
     self.eps_torque_scale = EPS_SCALE[CP.carFingerprint] / 100.
     self.cluster_speed_hyst_gap = CV.KPH_TO_MS / 2.
     self.cluster_min_speed = CV.KPH_TO_MS / 2.
+    # global Hook???
+    self.hook = Hook() if Hook is not None else None
 
     # On cars with cp.vl["STEER_TORQUE_SENSOR"]["STEER_ANGLE"]
     # the signal is zeroed to where the steering angle is at start.
@@ -109,6 +116,11 @@ class CarState(CarStateBase):
       conversion_factor = CV.KPH_TO_MS if is_metric else CV.MPH_TO_MS
       ret.cruiseState.speedCluster = cluster_set_speed * conversion_factor
 
+    if self.hook is not None:
+      a, b = self.hook.update(ret.cruiseState.speed, ret.cruiseState.speedCluster)
+      ret.cruiseState.speed = a
+      ret.cruiseState.speedCluster = b
+
     cp_acc = cp_cam if self.CP.carFingerprint in (TSS2_CAR - RADAR_ACC_CAR) else cp
 
     if self.CP.carFingerprint in (TSS2_CAR | RADAR_ACC_CAR):
-- 
2.25.1

